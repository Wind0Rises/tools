<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE generatorConfiguration
			PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
			"http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">
			
<!-- 配置生成器 -->
<generatorConfiguration>
	<!-- 
	    context:生成一组对象的环境 
	    id:必选，上下文id，用于在生成错误时提示
	    defaultModelType:指定生成对象的样式
	        1：conditional：类似hierarchical；
	        2：flat：所有内容（主键，blob）等全部生成在一个对象中；
	        3：hierarchical：主键生成一个XXKey对象(key class)，Blob等单独生成一个对象，其他简单属性在一个对象中(record class)
	    targetRuntime:
	        1：MyBatis3：默认的值，生成基于MyBatis3.x以上版本的内容，包括XXXBySample；
	        2：MyBatis3Simple：类似MyBatis3，只是不生成XXXBySample；
	    introspectedColumnImpl：类全限定名，用于扩展MBG
	-->
	<context id="MySqlContext" targetRuntime="MyBatis3Simple" defaultModelType="flat">
	 	<!-- beginningDelimiter和endingDelimiter：指明数据库的用于标记数据库对象名的符号，比如ORACLE就是双引号，MYSQL默认是`反引号； -->
		<property name="beginningDelimiter" value="`"/>
		<property name="endingDelimiter" value="`"/>
		
		<!-- 生成的Java文件的编码 -->
    	<property name="javaFileEncoding" value="UTF-8"/>
    	
    	<!-- 格式化java代码 -->
    	<property name="javaFormatter" value="org.mybatis.generator.api.dom.DefaultJavaFormatter"/>
    	<!-- 格式化XML代码 -->
    	<property name="xmlFormatter" value="org.mybatis.generator.api.dom.DefaultXmlFormatter"/>
		
		<commentGenerator type="com.liu.generator.comment.MyCommentGenerator">
			<property name="supressDate" value="true"/>
			<property name="addRemarkComments" value="true"/>
		</commentGenerator>
		
		<!-- 连接数据库 -->
		<jdbcConnection driverClass="com.mysql.jdbc.Driver"
						connectionURL="jdbc:mysql://10.1.1.100:33306/evermall_coupon"
						userId="root"
						password="root">
		</jdbcConnection>
		
		<!-- javaModelGenerator必须要有一个 -->
		<!-- targetProject:指定生成Model文件的路径;  targetPackage:指定生成Model类的包名-->
		<javaModelGenerator targetPackage="com.liu.generator.create.model" targetProject="src/main/java">
			<!--for MyBatis3/MyBatis3Simple自动为每一个生成的类创建一个构造方法，构造方法包含了所有的field；而不是使用setter； -->
        	<property name="constructorBased" value="false"/>
			<!-- 设置是否在getter方法中，对String类型字段调用trim()方法 -->
			<property name="trimStrings" value="true"/>
		</javaModelGenerator>
		
		<!-- 指定生成对应Mapper的位置；一般都是指定到src/main/resources -->
		<sqlMapGenerator targetPackage="com.liu.generator.create.mapper" targetProject="src/main/java"/>
		
		<!-- 指定数据操作接口即对应dao的生成位置 -->
		<javaClientGenerator type="XMLMAPPER" targetPackage="com.liu.generator.create.dao" targetProject="src/main/java"/>
		
		<!-- 所要操作的数据库的表 -->
		<table tableName="emall_user_promo_code" >
			<!-- 指定生成实体类时是否使用实际的列名作为实体类的属性名 -->
			<property name="useActualColumnNames" value="true"/>
			<!-- 设置Insert返回主键； SELECT LAST_INSERT_ID()   -->
			<generatedKey column="userPromoCode" sqlStatement="MySql" identity="true"/>
		</table>
	</context>
</generatorConfiguration>